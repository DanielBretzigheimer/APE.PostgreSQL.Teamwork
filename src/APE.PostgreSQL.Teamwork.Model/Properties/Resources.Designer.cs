//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APE.PostgreSQL.Teamwork.Model.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("APE.PostgreSQL.Teamwork.Model.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SET datestyle = dmy;
        ///INSERT INTO &quot;[Schema]&quot;.&quot;ExecutionHistory&quot; (&quot;Version&quot;, &quot;ExecutionDate&quot;, &quot;FileType&quot;, &quot;Message&quot;) VALUES (&apos;[Version]&apos;, &apos;[Time]&apos;, &apos;[FileType]&apos;, &apos;[Message]&apos;);
        ///[Ignore] INSERT INTO &quot;[Schema]&quot;.&quot;ExecutedFile&quot; VALUES (&apos;[Version]&apos;, &apos;[Time]&apos;, &apos;[Message]&apos;); ähnelt.
        /// </summary>
        internal static string AddExecutedFile {
            get {
                return ResourceManager.GetString("AddExecutedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///CREATE DATABASE &quot;[Database]&quot;
        ///	WITH OWNER = postgres
        ///			 ENCODING = &apos;UTF8&apos;
        ///			 TABLESPACE = pg_default
        ///			 CONNECTION LIMIT = -1; ähnelt.
        /// </summary>
        internal static string CreateDatabase {
            get {
                return ResourceManager.GetString("CreateDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///CREATE SCHEMA IF NOT EXISTS &quot;[Schema]&quot;;
        ///
        ///DO
        ///-- needs to be in one line, else Npgsql splits the statement wrong!
        ///$$ BEGIN CREATE TYPE &quot;[Schema]&quot;.&quot;SqlFileType&quot; AS ENUM (&apos;UndoDiff&apos;, &apos;Diff&apos;, &apos;Dump&apos;); EXCEPTION WHEN others THEN /* do nothing because its already existing */ END $$;
        ///ALTER TYPE &quot;[Schema]&quot;.&quot;SqlFileType&quot;
        ///	OWNER TO postgres;
        ///COMMENT ON TYPE &quot;[Schema]&quot;.&quot;SqlFileType&quot;
        ///	IS &apos;the type of an sql file which was executed&apos;;
        ///
        ///CREATE TABLE IF NOT EXISTS &quot;[Schema]&quot;.&quot;ExecutedFile&quot;
        ///(
        ///	&quot;Version&quot; text NO [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string CreateTeamworkSchema {
            get {
                return ResourceManager.GetString("CreateTeamworkSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die REVOKE CONNECT ON DATABASE &quot;[Database]&quot; FROM public;
        ///ALTER DATABASE &quot;[Database]&quot; CONNECTION LIMIT 0;
        ///SELECT pg_terminate_backend(pid)
        ///  FROM pg_stat_activity
        ///  WHERE pid &lt;&gt; pg_backend_pid()
        ///  AND datname=&apos;[Database]&apos;; ähnelt.
        /// </summary>
        internal static string DisconnectDatabase {
            get {
                return ResourceManager.GetString("DisconnectDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DROP DATABASE IF EXISTS &quot;[Database]&quot;; ähnelt.
        /// </summary>
        internal static string DropDatabase {
            get {
                return ResourceManager.GetString("DropDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SELECT DISTINCT &quot;Version&quot;
        ///FROM 	&quot;[Schema]&quot;.&quot;ExecutedFile&quot;
        ///ORDER BY &quot;Version&quot;; ähnelt.
        /// </summary>
        internal static string GetAppliedVersions {
            get {
                return ResourceManager.GetString("GetAppliedVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SELECT 	COUNT(*) 
        ///FROM 	information_schema.schemata
        ///WHERE	schema_name = &apos;[Schema]&apos;
        ///	AND	catalog_name = &apos;[Database]&apos;; ähnelt.
        /// </summary>
        internal static string GetSchema {
            get {
                return ResourceManager.GetString("GetSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SELECT datname FROM pg_database
        ///WHERE datistemplate = false; ähnelt.
        /// </summary>
        internal static string GetTables {
            get {
                return ResourceManager.GetString("GetTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DELETE FROM &quot;[Schema]&quot;.&quot;ExecutedFile&quot; sqlFile WHERE sqlFile.&quot;Version&quot; ILIKE &apos;%[LastAppliedVersion]%&apos;; ähnelt.
        /// </summary>
        internal static string RemoveVersion {
            get {
                return ResourceManager.GetString("RemoveVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ALTER DATABASE &quot;[NewDatabaseName]&quot; RENAME TO &quot;[OldDatabaseName]&quot;; ähnelt.
        /// </summary>
        internal static string RenameDatabase {
            get {
                return ResourceManager.GetString("RenameDatabase", resourceCulture);
            }
        }
    }
}
